// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: internal/impl/kube.proto

package impl

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BabysitterConfig contains configuration passed to a babysitter.
type BabysitterConfig struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Namespace     string                      `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                            // Kubernetes namespace
	DeploymentId  string                      `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`                                                  // globally unique deployment id
	Listeners     map[string]int32            `protobuf:"bytes,3,rep,name=listeners,proto3" json:"listeners,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // a map from listener name to port
	Groups        map[string]*ComponentGroups `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`        // a map from component name to group name
	Telemetry     *Telemetry                  `protobuf:"bytes,5,opt,name=telemetry,proto3" json:"telemetry,omitempty"`                                                                            // options to control how the telemetry is being manipulated.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BabysitterConfig) Reset() {
	*x = BabysitterConfig{}
	mi := &file_internal_impl_kube_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BabysitterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BabysitterConfig) ProtoMessage() {}

func (x *BabysitterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internal_impl_kube_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BabysitterConfig.ProtoReflect.Descriptor instead.
func (*BabysitterConfig) Descriptor() ([]byte, []int) {
	return file_internal_impl_kube_proto_rawDescGZIP(), []int{0}
}

func (x *BabysitterConfig) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BabysitterConfig) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *BabysitterConfig) GetListeners() map[string]int32 {
	if x != nil {
		return x.Listeners
	}
	return nil
}

func (x *BabysitterConfig) GetGroups() map[string]*ComponentGroups {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *BabysitterConfig) GetTelemetry() *Telemetry {
	if x != nil {
		return x.Telemetry
	}
	return nil
}

type ComponentGroups struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupNames    []string               `protobuf:"bytes,1,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentGroups) Reset() {
	*x = ComponentGroups{}
	mi := &file_internal_impl_kube_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentGroups) ProtoMessage() {}

func (x *ComponentGroups) ProtoReflect() protoreflect.Message {
	mi := &file_internal_impl_kube_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentGroups.ProtoReflect.Descriptor instead.
func (*ComponentGroups) Descriptor() ([]byte, []int) {
	return file_internal_impl_kube_proto_rawDescGZIP(), []int{1}
}

func (x *ComponentGroups) GetGroupNames() []string {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

// Options to control how the telemetry is being manipulated.
type Telemetry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       *MetricOptions         `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Telemetry) Reset() {
	*x = Telemetry{}
	mi := &file_internal_impl_kube_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Telemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Telemetry) ProtoMessage() {}

func (x *Telemetry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_impl_kube_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Telemetry.ProtoReflect.Descriptor instead.
func (*Telemetry) Descriptor() ([]byte, []int) {
	return file_internal_impl_kube_proto_rawDescGZIP(), []int{2}
}

func (x *Telemetry) GetMetrics() *MetricOptions {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Options to configure how the metrics are handled by the deployer.
type MetricOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, the deployer also exports metrics created implicitly by the
	// framework; e.g., autogenerated metrics, http metrics.
	AutoGenerateMetrics bool `protobuf:"varint,1,opt,name=auto_generate_metrics,json=autoGenerateMetrics,proto3" json:"auto_generate_metrics,omitempty"`
	// How often to export the metrics to Google Cloud.
	ExportInterval *durationpb.Duration `protobuf:"bytes,2,opt,name=export_interval,json=exportInterval,proto3" json:"export_interval,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MetricOptions) Reset() {
	*x = MetricOptions{}
	mi := &file_internal_impl_kube_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricOptions) ProtoMessage() {}

func (x *MetricOptions) ProtoReflect() protoreflect.Message {
	mi := &file_internal_impl_kube_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricOptions.ProtoReflect.Descriptor instead.
func (*MetricOptions) Descriptor() ([]byte, []int) {
	return file_internal_impl_kube_proto_rawDescGZIP(), []int{3}
}

func (x *MetricOptions) GetAutoGenerateMetrics() bool {
	if x != nil {
		return x.AutoGenerateMetrics
	}
	return false
}

func (x *MetricOptions) GetExportInterval() *durationpb.Duration {
	if x != nil {
		return x.ExportInterval
	}
	return nil
}

var File_internal_impl_kube_proto protoreflect.FileDescriptor

const file_internal_impl_kube_proto_rawDesc = "" +
	"\n" +
	"\x18internal/impl/kube.proto\x12\x04impl\x1a\x1egoogle/protobuf/duration.proto\"\x95\x03\n" +
	"\x10BabysitterConfig\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12#\n" +
	"\rdeployment_id\x18\x02 \x01(\tR\fdeploymentId\x12C\n" +
	"\tlisteners\x18\x03 \x03(\v2%.impl.BabysitterConfig.ListenersEntryR\tlisteners\x12:\n" +
	"\x06groups\x18\x04 \x03(\v2\".impl.BabysitterConfig.GroupsEntryR\x06groups\x12-\n" +
	"\ttelemetry\x18\x05 \x01(\v2\x0f.impl.TelemetryR\ttelemetry\x1a<\n" +
	"\x0eListenersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aP\n" +
	"\vGroupsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.impl.ComponentGroupsR\x05value:\x028\x01\"2\n" +
	"\x0fComponentGroups\x12\x1f\n" +
	"\vgroup_names\x18\x01 \x03(\tR\n" +
	"groupNames\":\n" +
	"\tTelemetry\x12-\n" +
	"\ametrics\x18\x01 \x01(\v2\x13.impl.MetricOptionsR\ametrics\"\x87\x01\n" +
	"\rMetricOptions\x122\n" +
	"\x15auto_generate_metrics\x18\x01 \x01(\bR\x13autoGenerateMetrics\x12B\n" +
	"\x0fexport_interval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0eexportIntervalB/Z-github.com/eberkley/weaver-kube/internal/implb\x06proto3"

var (
	file_internal_impl_kube_proto_rawDescOnce sync.Once
	file_internal_impl_kube_proto_rawDescData []byte
)

func file_internal_impl_kube_proto_rawDescGZIP() []byte {
	file_internal_impl_kube_proto_rawDescOnce.Do(func() {
		file_internal_impl_kube_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_impl_kube_proto_rawDesc), len(file_internal_impl_kube_proto_rawDesc)))
	})
	return file_internal_impl_kube_proto_rawDescData
}

var file_internal_impl_kube_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_internal_impl_kube_proto_goTypes = []any{
	(*BabysitterConfig)(nil),    // 0: impl.BabysitterConfig
	(*ComponentGroups)(nil),     // 1: impl.ComponentGroups
	(*Telemetry)(nil),           // 2: impl.Telemetry
	(*MetricOptions)(nil),       // 3: impl.MetricOptions
	nil,                         // 4: impl.BabysitterConfig.ListenersEntry
	nil,                         // 5: impl.BabysitterConfig.GroupsEntry
	(*durationpb.Duration)(nil), // 6: google.protobuf.Duration
}
var file_internal_impl_kube_proto_depIdxs = []int32{
	4, // 0: impl.BabysitterConfig.listeners:type_name -> impl.BabysitterConfig.ListenersEntry
	5, // 1: impl.BabysitterConfig.groups:type_name -> impl.BabysitterConfig.GroupsEntry
	2, // 2: impl.BabysitterConfig.telemetry:type_name -> impl.Telemetry
	3, // 3: impl.Telemetry.metrics:type_name -> impl.MetricOptions
	6, // 4: impl.MetricOptions.export_interval:type_name -> google.protobuf.Duration
	1, // 5: impl.BabysitterConfig.GroupsEntry.value:type_name -> impl.ComponentGroups
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_internal_impl_kube_proto_init() }
func file_internal_impl_kube_proto_init() {
	if File_internal_impl_kube_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_impl_kube_proto_rawDesc), len(file_internal_impl_kube_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_impl_kube_proto_goTypes,
		DependencyIndexes: file_internal_impl_kube_proto_depIdxs,
		MessageInfos:      file_internal_impl_kube_proto_msgTypes,
	}.Build()
	File_internal_impl_kube_proto = out.File
	file_internal_impl_kube_proto_goTypes = nil
	file_internal_impl_kube_proto_depIdxs = nil
}
